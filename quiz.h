/*
 * quiz.h
 * This file contains all the actual quizzes- plus the quiz item object.
 * Author: Paul Clarke
 *
 */

#ifndef __QUIZ_H_INCLUDED__
#define __QUIZ_H_INCLUDED__


#include "theory.h"
#include <vector>
#include <string>

std::vector<int> *randints(int start, int stop);

struct ChordQItem {
    std::vector<Note> *notevec;
    std::string name;
};

/* transpose_q: Transpose a chord. Generator for other quizzes.

   Given a chord in the key k, generate a ChordQItem of that chord transposed to
   a random key in the same mode, and put somewhere in the range of midi notes
   [min_mn, max_mn). The chord will be transposed to a key with a maximum of
   flatsharp_limit flats or sharps(if flatsharp_limit is negative,
   Key::get_flatsharp_limit() will be used). The name of the QItem will be
   generated by a given suffix appended to the key name. If show_lowest is true,
   then the value of the lowest note will be appended to this name.*/
ChordQItem transpose_q(std::vector<Note> *chord, int min_mn, int max_mn,
                       std::string suffix, Key k=Key("C"), int flatsharp_limit=-1,
                       bool show_lowest=true);

/* triad in a random key and inversion */
ChordQItem major_triad_quiz();
/* root positioion major and minor seventh chords */
ChordQItem quiz_root_pos_majmin_7ths();

#endif
